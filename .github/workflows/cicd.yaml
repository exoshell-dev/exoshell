name: CI/CD

on:
  push:
    branches:
      - main
    tags:
      - v*
      - desktop/v*
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to deploy
        default: staging
        type: choice
        options:
          - staging
          - production
      should-deploy:
        description: Deploy
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  cicd:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform}}
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Compute variables
        uses: actions/github-script@v6
        id: variables
        with:
          script: (await import('${{ github.workspace }}/.github/scripts/compute-variables.mjs')).default(context, core)
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - uses: oven-sh/setup-bun@v1
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - name: Install > Lint > Test
        run: |
          bun install --frozen-lockfile
          bun run ci
      - name: Compute package version
        id: version
        if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/desktop/v')
        run: echo "::set-output name=version::${GITHUB_REF##refs/tags/v}"
      - name: Install Ubuntu dependencies
        if: (startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/desktop/v')) && matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - uses: tauri-apps/tauri-action@v0
        if: (startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/desktop/v'))
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ./apps/desktop
          # includeUpdaterJson: true
          tauriScript: bun tauri
