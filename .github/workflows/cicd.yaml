name: CI/CD

on:
  push:
    branches:
      - main
    tags:
      - v*
      - desktop/v*
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to deploy
        default: staging
        type: choice
        options:
          - staging
          - production
      should-deploy:
        description: Deploy
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  ci:
    strategy:
      fail-fast: false
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request'
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Compute variables
        uses: actions/github-script@v7
        id: variables
        with:
          script: (await import('${{ github.workspace }}/.github/scripts/compute-variables.mjs')).default(context, core)

      - uses: oven-sh/setup-bun@v1

      - name: Install > Lint > Test
        run: |
          bun install --frozen-lockfile
          bun run ci

  cd:
    strategy:
      fail-fast: false
      # Missing architectures: Linux [ARMv7, ARMv8]
      # - platform: 'macos-latest'
      #   args: '--target aarch64-apple-darwin'
      # - platform: 'macos-latest'
      #   args: '--target x86_64-apple-darwin'
      # - platform: 'macos-latest'
      #   args: '--target universal-apple-darwin'
      # - platform: 'windows-latest'
      #   args: ''
      matrix:
        settings:
          - platform: 'ubuntu-22.04'
            args: ''
    runs-on: ${{ matrix.settings.platform}}
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/desktop/v')
    timeout-minutes: 30
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Compute variables
        uses: actions/github-script@v7
        id: variables
        with:
          script: (await import('${{ github.workspace }}/.github/scripts/compute-variables.mjs')).default(context, core)

      - name: Install dependencies (ubuntu platform only)
        if: matrix.settings.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - uses: oven-sh/setup-bun@v1

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install
        run: |
          bun install --frozen-lockfile

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: '${{ github.workspace }}apps/desktop/src-tauri -> target'

      - name: Compute package version
        id: version
        run: echo "::set-output name=version::${GITHUB_REF#refs/tags/v}"

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ./apps/desktop
          # includeUpdaterJson: true
          tauriScript: bun tauri build
          args: ${{ matrix.settings.args }}
          tagName: tauri-v${{ steps.version.outputs.version }}
          releaseName: 'Tauri v${{ steps.version.outputs.version }}'
          releaseBody: ''
          # releaseDraft: true
          # prerelease: false
